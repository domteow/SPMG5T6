Pages that have no link to the backend:
1. login.html 

EXPLORE PAGE:
    1. ./staff/homepage.standard.html 
    2. ./hr/homepage_hr.html 
    3. ./manager/homepage_manager.html 
To link to backed: 
    - Shows all the roles available and not available 
    - To display {role_name} and whether the user can create a learning journey: id= 'allroles'
    - Store role_name in a variable (var role = {role_name})
    - refer to ./staff/explore.js 

    If user has taken all required courses: 
    `<div class="roleCol container-fluid">
        <div class="row">
            <div class="col-8 roledeets">`+ role + `</div>
            <div class="col-4 completed">
                Attained Skills Required
            </div>
        </div>
    </div>`
    
    If user has NOT taken all required courses: 
    `<div class="roleCol container-fluid">
        <div class="row">
            <div class="col-8 roledeets">`+ role + `</div>
            <div class="col-4 ncompleted" id='${role_id} onclick='createLJ(this.id)'>
                Take Skills Required
            </div>
        </div>
    </div>`
    -- ^ store role_id in (var role_id)

DASHBOARD PAGE (For personal use only):
    1. ./staff/dashboard_standard.html 
    2. ./hr/dashboard_hr.html 
    3. ./manager/dashboard_manager_personal.html 
To link to backend: 
    (CAROUSEL)
        - Shows all the learning journeys available in a card-carousel (3x1) format 
        - Shows learning journey name {role_title} and progress (progress bar)
        - Use a for loop to loop the data in 
            -> id = 'display_LJ'
            -> inside document.getElementById('display_LJ'), use a for loop to loop the data in 

        For index = 0: 
        `<div class="item active">
            <div class="col-xs-4">
                <!-- THE BELOW DIV WITH ID PATH_ IS FOR EACH INDIVIDUAL LEARNING JOURNEY PATH -->
                <!-- NAME OF LEARNING JOURNEY WITH ID='pathname' -->
                <!-- PROGRESS BAR WIDTH PERCENTAGE WITH ID='progressbar' -->
                <div class="path activecarou" id="path1" onclick="showpath(this.id)">
                    <div class="pathname" id="pathname">
                        <img src="../img/pathicon.png" alt="">` + role_title +
                    `</div>
                    <div class="progr">
                        Progress
                    </div>
                    <div class="progress" id="pathprogress">
                        <div class="progress-bar" role="progressbar" id="progressbar" style="width: 77%" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100"></div>
                    </div>
                </div>
            </div>
        </div>`

        For index > 0: 
        `<div class="item">
            <div class="col-xs-4">
                <div class="path" id="path2" onclick="showpath(this.id)">
                    <div class="pathname" id="pathname">
                        <img src="../img/pathicon.png" alt="">` + role_title +
                    `</div>
                    <div class="progr">
                        Progress
                    </div>
                    <div class="progress" id="pathprogress">
                        <div class="progress-bar" role="progressbar" id="progressbar" style="width: 77%" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100"></div>
                    </div>
                </div>
            </div>
        </div>`

        - Store {role_title} in a variable (var role_title)
        - Use Math to calculate the percentage of courses which has been completed (var percent_completed = ),
        -- Use id='progressbar' to change style width of progress bar 
        -- document.getElementById('progressbar').style.width = percent_completed + '%'

    (TO SEE COURSES)
    ! NEED TO CREATE A FUNCTION TO CHANGE THE COURSES DISPLAYED ON CLICK OF AN ITEM ! 
    - Shows relevant courses added into the learning journey 
    - Place details in id='courses_in_LJ'
    - Store {course_name} as (var course_name= )
    - For every index % 2 == 0: 
    `<div class="row">
        <!-- THE DIV 'MODULE' BELOW IS FOR EACH INDIVIDUAL COURSE TAKEN/ TAKING -->
        <!-- NAME OF COURSE HAS ID='courseName' -->
        <!-- FOR THOSE THAT ARE COMPLETED ID='complete' CLASS='courseNotComplete' -->
        <!-- FOR THOSE THAT ARE NOT COMPLETED ID='notcomplete' CLASS='courseComplete' -->
        <div class="col-sm-6 module">
            <div class="container-fluid course">
                <div class="row ">
                    <div class="col-sm-2">
                        <img src="../img/leadership.png" alt="">
                    </div>
                    <div class="col-sm-6 courseName" id="courseName">` + 
                        course_name + 
                    `</div>
                    <!-- THIS IS IF THE COURSE HAS BEEN COMPLETED. IF NOT COMPLETE, id= 'notcomplete' class= 'courseNotComplete'-->
                    <div class="col-sm-4 courseComplete" id="complete">
                        Completed
                    </div>
                </div>
            </div>                        
        </div>`
    
    - For every index %2 != 0: 
        `<div class="col-sm-6 module">
            <div class="container-fluid course">
                <div class="row ">
                    <div class="col-2">
                        <img src="../img/comm.png" alt="">
                    </div>
                    <div class="col-6 courseName" id="courseName"> `+
                        course_name +
                    `</div>
                    <div class="col-sm-4 courseComplete" id="complete">
                        Completed
                    </div>
                </div>
            </div>                        
        </div>
    </div>`

    AFTER adding all courses under learning journey (WHEN FOR LOOP ENDS) 
    ! CREATE A DELETE FUNCTION TO DELETE LEARNING JOURNEY ! 
    - Store {journey_id} in (var lj_id = )
    `<div class="delete" id="${lj_id}" onclick=deleteLJ(this.id)>
        Delete Learning Journey
    </div>`
    
CREATING LEARNING JOURNEY PAGE 
    1. ./creating_LJ/creating_LJ.html 
To link to backend: 
    - View ./creating_LJ/creating_LJ.js 
    - Need role_title, role_description and skills (in the form of a dictionary) <- Nested dictionary
    
